name: CI
on:
  push:
    branches:
      - "**"
    tags:
      - "**"
  pull_request:
    types: [ labeled ]

jobs:
  prod-check:
    runs-on: self-hosted
    steps:
    
    - name: test
      run: echo "This is a test."
      
    - name: cd file
      run: Get-Content -Path C:\Users\RileyTurner\Desktop\baretest_example.txt -Tail 1
     
    - name: runner name to var
      run: echo "Deploying to production server on branch ${Env:RUNNER_NAME}"
      
      
    - name: json
      run: |
        pwd
        echo "jsonComport=$($(Get-Content .\${Env:RUNNER_NAME}.json | ConvertFrom-Json).comport)"  >> $Env:GITHUB_ENV
        
    - name: jsontwo
      run: echo "${Env:jsonComport}"
      
      
    - name: env baretest_example
      run: |
        pwd
        echo "FileContent=$(Get-Content -Path .\baretest_example.txt -Tail 1)" >> $Env:GITHUB_ENV
        
    - name: baretest_example two
      run: echo "${Env:FileContent}"
      
    - name: Match failed
      run: |
        pwd
        ${Env:FileContent} -Match "(?<failed>\d+(?= failed))"
        echo "Fails=$($Matches.failed)" >> $Env:GITHUB_ENV
        $Matches.failed
        
    - name: Match failed echo
      run: echo "${Env:Fails}"
        
    - name: Match skipped
      run: |
        pwd
        ${Env:FileContent} -Match "(?<skipped>\d+(?= skipped))"
        echo "Skips=$($Matches.skipped)" >> $Env:GTHUB_ENV
        $Matches.skipped
        
    - name: Match skipped echo
      run: echo "${Env:Skips}"
        
    - name: Match passed
      run: |
        pwd
        ${Env:FileContent} -Match "(?<passed>\d+(?= passed))"
        echo "Pass=$($Matches.passed)" >> $Env:GTHUB_ENV
        $Matches.passed
      
    - name: Match passed echo
      run: echo "${Env:Pass}"
    
      
